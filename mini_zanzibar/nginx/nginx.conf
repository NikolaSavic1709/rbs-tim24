upstream app_servers {
    server go_app:8080;
    server go_app:8081;
    server go_app:8082;
}

server {
    listen 80 default_server;

    return 308 https://$host$request_uri;
}

server {
    listen 443 ssl;

    ssl_certificate /etc/nginx/ssl/example.crt;
    ssl_certificate_key /etc/nginx/ssl/example.key;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers HIGH:!aNULL:!MD5;

    resolver 8.8.8.8;

    location / {
        proxy_pass http://app_servers;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Headers' '*';
        add_header 'Access-Control-Allow-Methods' 'POST, GET, PUT, DELETE, OPTIONS';

        proxy_ssl_server_name on;
        proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        proxy_buffering off;
        proxy_hide_header Set-Cookie;
        proxy_ignore_headers Set-Cookie;

        # Handle OPTIONS requests for CORS preflight
        if ($request_method = OPTIONS ) {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'POST, GET, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept';
            add_header 'Access-Control-Max-Age' 3600;
            add_header 'Content-Length' 0;
            add_header 'Content-Type' text/plain;
            return 204;
        }
    }
}
